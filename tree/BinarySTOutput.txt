
********************************************************************************************************************************************
Binary Search tree
********************************************************************************************************************************************


************************************************************ : tree looks like : ************************************************************
25   <-  50 ->  75   
15   <-  25 ->  35   
5    <-  15 ->  20   
     <-  5  ->       
     <-  20 ->       
30   <-  35 ->  40   
     <-  30 ->       
     <-  40 ->       
60   <-  75 ->  85   
55   <-  60 ->  65   
     <-  55 ->       
     <-  65 ->       
80   <-  85 ->  90   
     <-  80 ->       
     <-  90 ->       

****************************************************** : Different functinos of tree : ******************************************************
height of tree > 3
size of tree > 15
max of tree > 90
min of tree > 5

************************************************** : elements within range (30, 90) are : **************************************************
25 35 40 50 55 60 65 75 

****************************************************************** : LCA : ******************************************************************
LCA of 20, 35 is > 25

***************************************************** : inOrderTraversal is sorted >  : *****************************************************
5 15 20 25 30 35 40 50 55 60 65 75 80 85 90 

************************************************ : INorder Successor and predecessor are  : ************************************************
Successor of 55 is > 60
Predecessor of 55 is > 54


************************************** : construct BST from preOrderTraversal array tree looks like : **************************************
17   <-  50 ->  76   
9    <-  17 ->  23   
     <-  9  ->  14   
12   <-  14 ->       
     <-  12 ->       
19   <-  23 ->  25   
     <-  19 ->  20   
     <-  20 ->       
     <-  25 ->       
54   <-  76 ->       
     <-  54 ->  72   
67   <-  72 ->       
55   <-  67 ->       
     <-  55 ->       

************************************************* : get height without constructing tree : *************************************************
height is 4
